{"version":3,"sources":["./src/app/pages/task-view/task-view.component.html","./src/app/pages/task-view/task-view.component.ts","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/environments/environment.ts","./src/app/task.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/web-request.service.ts","./src/app/pages/edit-task/edit-task.component.ts","./src/app/pages/edit-task/edit-task.component.html","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"centered-content\">\n  <div class=\"task-manager-container\">\n    <div class=\"sidebar\">\n      <h1 class=\"title\">Lists</h1>\n      <div class=\"list-menu\">\n        <a\n          class=\"list-menu-item\"\n          *ngFor=\"let list of lists\"\n          [routerLink]=\"['/lists', list._id]\"\n          routerLinkActive=\"is-active\"\n        >\n          <p>{{ list.title }}</p>\n        </a>\n      </div>\n\n      <button class=\"button\" routerLink=\"/new-list\">+ New List</button>\n    </div>\n\n    <div class=\"task-list-container has-background-light\">\n      <h1 class=\"title\">Tasks</h1>\n\n      <!-- Task Element-->\n\n      <div class=\"task\" *ngFor=\"let task of tasks\">\n        <p [routerLink]=\"['/lists', task._listId, 'tasks', task._id]\">\n          {{ task.title }}\n        </p>\n      </div>\n\n      <button routerLink=\"./new-task\" class=\"button\">+</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { List } from 'src/app/models/list.model';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\n\n\nexport class TaskViewComponent implements OnInit {\n\n  lists: any;\n  tasks: any;\n\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute) { }\n\n  ngOnInit(){\n    this.route.params.subscribe(\n      (params: Params) => {\n        console.log(params);\n\n\n\n        this.taskService.getTasks(params.listId).subscribe((tasks:Task[])=>{\n          this.tasks=tasks;\n        })\n      }\n\n\n\n    )\n\n    this.taskService.getLists().subscribe((lists: List[]) => {\n      this.lists = lists;\n    })\n  }\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private route:ActivatedRoute, private router: Router) {\n    this.listId='';\n  }\n\n  listId: string;\n\n\n\n  ngOnInit(): void {\n\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.listId= params['listId'];\n        console.log(this.listId);\n      })\n\n  }\n\n  createTask(title:string){\n    this.taskService.createTask(title, this.listId).subscribe( (newTask:Task | any) =>{\n      console.log(\"success\")\n      this.router.navigate(['../'], { relativeTo: this.route })\n    } );\n\n\n\n  }\n\n\n\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1>Create a new task</h1>\n    <br />\n\n    <div class=\"control is-expanded\">\n      <input\n        #taskTitleInput\n        class=\"input has-background-light is-medium\"\n        type=\"text\"\n        placeholder=\"Enter task name ...\"\n      />\n    </div>\n    <br />\n\n    <div class=\"buttons is-right\">\n      <button routerLink=\"/\" class=\"button-back\" routerLink=\"/\">Cancel</button>\n      <div class=\"divider\"></div>\n      <button class=\"button-create\" (click)=\"createTask(taskTitleInput.value)\">\n        Create\n      </button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, ObservedValueOf } from 'rxjs';\nimport { List } from './models/list.model';\nimport { Task } from './models/task.model';\nimport { WebRequestService } from './web-request.service'\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TaskService {\n\n  constructor(private WebRequestService: WebRequestService) {\n\n   }\n\n\n\ngetLists():Observable <List[]> {\n  return this.WebRequestService.get('lists') as Observable <List[]>;\n}\n\ngetTasks(listId: string):Observable <Task[]> {\n  return this.WebRequestService.get(`lists/${listId}/tasks`) as Observable <Task[]>;\n}\n\n\ncreateTask(title: string, listId: string){\n  //Send web request create a task\n  return this.WebRequestService.post(`lists/${listId}/tasks`, { title: title });\n}\n\ngetTask(listId:string, taskId:string): Observable <Task>{\n  return this.WebRequestService.get(`lists/${listId}/tasks/${taskId}`) as Observable <Task>;\n}\n\nupdateTask(listId:string, taskId:string, title: string){\n  return this.WebRequestService.patch(`lists/${listId}/tasks/${taskId}`, {title: title});\n};\n\ndeleteTask(listId:string, taskId:string){\n  return this.WebRequestService.delete(`lists/${listId}/tasks/${taskId}`);\n};\n\n\ncreateList(title: string){\n  //Send web request create a list\n  return this.WebRequestService.post('lists', { title: title });\n};\n\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewListComponent,\n    NewTaskComponent,\n    EditTaskComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) {\n    this.ROOT_URL ='http://task-manager-stack.herokuapp.com';\n  }\n\n  get(uri:string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri:string, payload: Object){\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  patch(uri:string, payload: Object){\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  delete(uri:string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n\n  task!:Task;\n  taskId: string;\n  listId: string;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) {\n    this.listId=\"\";\n    this.taskId=\"\";\n\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        console.log(params);\n        this.taskId=params.taskId\n        this.listId=params.listId\n\n        this.taskService.getTask(params.listId,params.taskId).subscribe( (task: Task) => {\n          this.task=task\n          console.log(task)\n        })\n\n\n      })\n  }\n\nupdateTask(title:string) {\n  this.route.params.subscribe(\n    (params:Params) => {\n      this.taskService.updateTask(params.listId, params.taskId, title).subscribe(\n        (data)=>{\n          this.router.navigate([ '/lists', this.listId ])\n        }\n\n      )\n\n    }\n\n  )\n\n}\n\ndeleteTask() {\n  this.taskService.deleteTask(this.listId, this.taskId).subscribe((data)=>{\n    this.router.navigate([ '/lists', this.listId ])\n});\n\n}\n\n\n\n\n\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1>Edit Task Description</h1>\n    <br />\n\n    <div class=\"control is-expanded\">\n      <input\n        #taskTitleInput\n        class=\"input has-background-light is-medium\"\n        type=\"text\"\n        [(ngModel)]=\"task.title\"\n      />\n    </div>\n    <br />\n\n    <div class=\"buttons is-right\">\n      <button class=\"button-delete\" (click)=\"deleteTask()\">Delete</button>\n      <div class=\"divider\"></div>\n      <button routerLink=\"..\" class=\"button-back\" routerLink=\"../../\">\n        Cancel\n      </button>\n      <div class=\"divider\"></div>\n      <button\n        routerLink=\"../../\"\n        class=\"button-create\"\n        (click)=\"updateTask(taskTitleInput.value)\"\n      >\n        Update\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { List } from 'src/app/models/list.model';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-new-list',\n  templateUrl: './new-list.component.html',\n  styleUrls: ['./new-list.component.scss']\n})\nexport class NewListComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  createList(title: string){\n    this.taskService.createList(title).subscribe((list: List | any) =>{\n      console.log(list);\n\n      //Navigate to /lists/response._id\n      this.router.navigate([ '/lists', list._id ])\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1> \n            Create a new list \n        </h1>\n        <br>\n        \n            <div class=\"control is-expanded\">\n              <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter my list ...\">\n            </div>\n            <br>\n            \n\n\n            <div class=\"buttons is-right\">        \n            <button routerLink=\"/\" class=\"button-back\" routerLink=\"/\"> Cancel </button>\n            <div class=\"divider\"></div>\n            <button class=\"button-create\" (click)=\"createList(listTitleInput.value)\"> Create </button>\n          \n        </div>\n\n\n\n\n\n\n    </div>\n\n\n\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\n\nconst routes: Routes = [\n\n  { path: '', redirectTo: '/lists' , pathMatch:'full' },\n  { path: 'new-list', component: NewListComponent  },\n  { path: 'lists', component: TaskViewComponent },\n  { path: 'lists/:listId', component: TaskViewComponent },\n  { path: 'lists/:listId/new-task', component:NewTaskComponent },\n  { path: 'lists/:listId/tasks/:taskId', component:EditTaskComponent },\n \n  \n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}